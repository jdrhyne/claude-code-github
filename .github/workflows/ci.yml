name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [18.x, 20.x]
        exclude:
          # Skip macOS on Node 18 to reduce CI time
          - os: macos-latest
            node-version: 18.x

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run type check
      run: npm run typecheck

    - name: Build
      run: npm run build

    - name: Run unit tests
      run: npm run test:unit

    # E2E tests are disabled in CI due to environment complexity
    # Run locally with: npm run test:e2e
    # - name: Run E2E tests
    #   if: matrix.os != 'windows-latest'
    #   run: npm run test:e2e

    - name: Upload coverage reports
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/coverage-final.json
        flags: unittests
        name: codecov-umbrella

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Check if version changed
      id: version
      run: |
        PUBLISHED_VERSION=$(npm view @jdrhyne/claude-code-github version 2>/dev/null || echo "0.0.0")
        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        if [ "$PUBLISHED_VERSION" != "$PACKAGE_VERSION" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Publish to npm
      if: steps.version.outputs.changed == 'true'
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Create GitHub Release
      if: steps.version.outputs.changed == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: Release v${{ steps.version.outputs.version }}
        body: |
          See [CHANGELOG.md](https://github.com/jdrhyne/claude-code-github/blob/main/CHANGELOG.md) for details.
        draft: false
        prerelease: false